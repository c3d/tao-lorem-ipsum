// *****************************************************************************
// lorem_ipsum.tbl                                                 Tao3D project
// *****************************************************************************
//
// File description:
//
//     Definition of the interface between XLR and native code
//     for the "lorem ipsum" module.
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3
// (C) 2011-2012, Baptiste Soulisse <baptiste.soulisse@taodyne.com>
// (C) 2010-2011, Catherine Burvelle <catherine@taodyne.com>
// (C) 2010-2012,2014,2019, Christophe de Dinechin <christophe@dinechin.org>
// (C) 2010-2012, Jérôme Forissier <jerome@taodyne.com>
// (C) 2011-2012, Baptiste Soulisse <baptiste.soulisse@taodyne.com>
// *****************************************************************************
// This file is part of Tao3D
//
// Tao3D is free software: you can r redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Tao3D is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Tao3D, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************

PREFIX(lorem_ipsum_w,  tree, "lorem_ipsum",
       PARM(words, integer, "Number of words"),
       return lorem_ipsum(self,words),
       GROUP(module.LoremIpsum)
       SYNOPSIS("Produce a sequence of words in pseudo-latin")
       DESCRIPTION("Produce a sequence of words in pseudo-latin. "
                   "The text contains an arbitrary number of words, "
                   "specified by @a words.")
       RETURNS(tree, "A text with the required number of words."))

PREFIX(lorem_ipsum_wp, tree, "lorem_ipsum",
       PARM(words,integer, "Number of words")
       PARM(para,integer, "Number of paragraphs"),
       return lorem_ipsum(self,words,para),
       GROUP(module.LoremIpsum)
       SYNOPSIS("Produce a sequence of paragraphs in pseudo-latin")
       DESCRIPTION("Produce a sequence of paragraphs in pseudo-latin."
                   "@a words is the total number of words. The text is split "
                   "in @a para paragraphs of approximately the same length. "
                   "Paragraphs are separated by two consecutive carriage "
                   "returns.")
       RETURNS(tree, "A text with the required number of words and "
                     "paragraphs."))
